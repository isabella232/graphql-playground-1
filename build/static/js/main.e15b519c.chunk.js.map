{"version":3,"sources":["../../../Desktop/electron-cra-boilerplate/src/images/rubrikLogo.svg","../external \"https\"","../external \"punycode\"","../../../Desktop/electron-cra-boilerplate/node_modules/graphql-language-service-utils/esm sync /^.*/.js$","../../../Desktop/electron-cra-boilerplate/node_modules/graphql-language-service-utils/esm sync /^.*/.json$","../../../Desktop/electron-cra-boilerplate/node_modules/graphql-language-service-utils/esm lazy /^.*/.js$/ groupOptions: {} namespace object","../../../Desktop/electron-cra-boilerplate/node_modules/graphql-language-service-utils/esm lazy /^.*/.json$/ groupOptions: {} namespace object","../../../Desktop/electron-cra-boilerplate/src/components/LoginForm.js","../../../Desktop/electron-cra-boilerplate/src/utils/api.js","../../../Desktop/electron-cra-boilerplate/src/components/LandingPage.js","../../../Desktop/electron-cra-boilerplate/src/components/GraphiQl.js","../../../Desktop/electron-cra-boilerplate/src/App.js","../../../Desktop/electron-cra-boilerplate/src/serviceWorker.js","../../../Desktop/electron-cra-boilerplate/src/index.js","../external \"assert\""],"names":["module","exports","__webpack_require__","p","require","map","./Range.js","./file.js","./getASTNodeAtPosition.js","./index.js","./validateWithCustomRules.js","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","webpackEmptyContext","webpackAsyncContext","ids","Promise","all","slice","then","webpackEmptyAsyncContext","useStylesForm","makeStyles","theme","root","& .MuiTextField-root","margin","spacing","width","useStylesSlectPlatformButton","& > *","backgroundColor","&:hover","textTransform","font-weight","font-size","useStylesLoginButton","background-color","border-color","border-radius","line-height","color","display","margin-top","text-transform","box-shadow","LoginForm","props","classesForm","classesSelectPlatformButton","classesLoginButton","react_default","a","createElement","className","noValidate","autoComplete","TextField","autoFocus","error","ip","required","label","platform","onChange","InputProps","endAdornment","InputAdornment","position","polarisDomain","username","type","password","Button","variant","onClick","loginButton","disabled","length","loginButtonText","selectYourPlatform","defaultHttpHeader","Content-Type","User-Agent","formatIp","replace","userFiendlyErrorMessage","console","log","response","status","concat","data","message","includes","rubrikApiPost","_callee","url","httpHeaders","body","instance","regenerator_default","wrap","_context","prev","next","axios","create","timeout","httpsAgent","https","Agent","rejectUnauthorized","method","headers","sent","abrupt","stop","validateCredentials","_x4","_x5","_x6","_x7","_x8","_validateCredentials","apply","this","arguments","_callee2","nodeIp","httpHeader","endpoint","postBody","formattedNodeIp","_context2","Authorization","btoa","Accept","token","access_token","selectYourPlatformFormHeader","polarisUserDomain","LandingPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","formHeader","loginErrorMessage","apiToken","createLoginForm","bind","assertThisInitialized","handleSwitchToLogin","handleSelectYourPlatform","handleLoginButton","createLoginHeader","createDevModeIcon","handleModeButton","event","preventDefault","setState","target","textContent","toLowerCase","credentialUpdate","t0","defineProperty","value","Fragment","createWelcome","createLogin","createLoginLogo","createLoginPlatformButtons","createRwpLink","alt","src","rubrikLogo","createLoginErrorMessage","HtmlTooltip","withStyles","tooltip","maxWidth","text-align","Tooltip","title","Typography","IconButton","aria-label","Person_default","Code_default","createFullLandingPageUi","Component","GraphiQl","dist_default","fetcher","graphQLParams","endpointPrefix","endpointSuffixPolaris","URL","requestOptions","protocol","hostname","port","path","pathname","search","request","httpsRequest","reject","on","chunks","push","Buffer","from","end","toString","statusCode","JSON","parse","stringify","graphQLFetcher","Logo","align","App","handleCredentialUpdate","_this2","src_components_LandingPage","components_GraphiQl","Boolean","window","location","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e15b519c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rubrikLogo.b5f40d5b.svg\";","module.exports = require(\"https\");","module.exports = require(\"punycode\");","var map = {\n\t\"./Range.js\": 79,\n\t\"./file.js\": 99,\n\t\"./getASTNodeAtPosition.js\": 98,\n\t\"./index.js\": 35,\n\t\"./validateWithCustomRules.js\": 115\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 319;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 320;","var map = {\n\t\"./Range.js\": [\n\t\t79\n\t],\n\t\"./file.js\": [\n\t\t99\n\t],\n\t\"./getASTNodeAtPosition.js\": [\n\t\t98\n\t],\n\t\"./index.js\": [\n\t\t35\n\t],\n\t\"./validateWithCustomRules.js\": [\n\t\t115\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 321;\nmodule.exports = webpackAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 322;","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport \"../components/LandingPage.css\";\n\nconst useStylesForm = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n    },\n  },\n}));\n\nconst useStylesSlectPlatformButton = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      backgroundColor: \"#FFF\",\n      \"&:hover\": {\n        backgroundColor: \"#FFF\",\n      },\n      width: \"100%\",\n      textTransform: \"none\",\n      \"font-weight\": 100,\n      \"font-size\": \" 1.0775rem\",\n    },\n  },\n}));\n\nconst useStylesLoginButton = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      \"&:hover\": {\n        \"background-color\": \"#18b8e9\",\n        \"border-color\": \"#18b8e9\",\n      },\n      \"border-radius\": \"0.286rem\",\n      \"line-height\": \" 1.83\",\n      color: \"#fff\",\n      \"background-color\": \"rgb(0, 134, 192)\",\n      \"border-color\": \"rgb(0, 134, 192)\",\n      display: \"inline-block\",\n      \"margin-top\": \"20px\",\n      \"font-weight\": 200,\n      \"font-size\": \"1.0775rem\",\n      \"text-transform\": \"uppercase\",\n      \"box-shadow\":\n        \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\n    },\n  },\n}));\n\nexport default function LoginForm(props) {\n  const classesForm = useStylesForm();\n  const classesSelectPlatformButton = useStylesSlectPlatformButton();\n  const classesLoginButton = useStylesLoginButton();\n\n  function diableLoginButton() {\n    // This function controls whether or not the field button is disabled.\n    // The logic is super ugly and can be cleaned up but it works\n    if (\n      props.ip === null ||\n      props.username === null ||\n      props.password === null\n    ) {\n      return true;\n    }\n    if (props.ip !== null) {\n      if (props.ip.length <= 0) {\n        return true;\n      }\n    }\n\n    if (props.username !== null) {\n      if (props.username.length <= 0) {\n        return true;\n      }\n    }\n\n    if (props.password !== null) {\n      if (props.password.length <= 0) {\n        return true;\n      }\n    }\n\n    if (props.loginButtonText !== \"Login\") {\n      return true;\n    }\n  }\n  return (\n    <form className={classesForm.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          autoFocus\n          error={props.ip !== null && props.ip === \"\"}\n          required\n          id=\"ip\"\n          label={props.platform === \"cdm\" ? \"CDM IP or FQDN\" : \"Polaris Domain\"}\n          onChange={props.onChange}\n          InputProps={\n            props.platform === \"cdm\"\n              ? null\n              : {\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      {props.polarisDomain}\n                    </InputAdornment>\n                  ),\n                }\n          }\n        />\n        <TextField\n          required\n          id=\"username\"\n          label=\"Username\"\n          onChange={props.onChange}\n          error={props.username !== null && props.username === \"\"}\n        />\n\n        <TextField\n          required\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          onChange={props.onChange}\n          error={props.password !== null && props.password === \"\"}\n        />\n      </div>\n      <div className={classesLoginButton.root}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={props.loginButton}\n          disabled={diableLoginButton()}\n        >\n          {props.loginButtonText}\n        </Button>\n      </div>\n      <div className={classesSelectPlatformButton.root}>\n        <Button onClick={props.selectYourPlatform}>\n          {props.platform === \"cdm\" ? \"Switch to Polaris\" : \"Switch to CDM\"}\n        </Button>\n      </div>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport https from \"https\";\nimport { request as httpsRequest } from \"https\";\n\nconst defaultHttpHeader = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": \"RubrikGraphQLPlayground\",\n};\n\nfunction formatIp(ip) {\n  /*\n   * This function will processes the user provide CDM IP or Polaris Domain\n   * and removes any values that will prevent connection to the platforms.\n   */\n\n  return ip\n    .replace(\"https://\", \"\")\n    .replace(\".my.rubrik.com\", \"\")\n    .replace(\"/\", \"\");\n}\n\nexport function userFiendlyErrorMessage(error) {\n  /*\n   * This function will processes an error mesage returned by an API call\n   * and then provide a user friendly version of that error message\n   */\n  let userFiendlyErrorMessage;\n  try {\n    console.log(error.response);\n  } catch (error) {\n    console.log(\"No additional error detail\");\n  }\n\n  if (error.response) {\n    if (error.response.status === 401 || error.response.status === 422) {\n      userFiendlyErrorMessage =\n        \"Sorry, you entered an incorrect email or password.\";\n    } else if (error.response.status === 400 || error.response.status === 401) {\n      userFiendlyErrorMessage =\n        \"Sorry, the request was rejected as malformed by the Rubrik platform.\";\n    } else {\n      userFiendlyErrorMessage = `Sorry, the request was rejected with a ${error.response.status} (${error.response.data.message}) HTTP response status code.`;\n    }\n  } else if (\n    error.message.includes(\"getaddrinfo ENOTFOUND\") ||\n    error.message.includes(\"Network Error\")\n  ) {\n    userFiendlyErrorMessage =\n      \"Sorry, we were unable to connect to the provided Rubrik platform.\";\n  } else if (\n    error.message.includes(\"connect ETIMEDOUT\") ||\n    error.message.includes(\"timeout of 15000ms exceeded\")\n  ) {\n    userFiendlyErrorMessage =\n      \"Sorry, the connection to the Rubrik platform timeout and we were unable to connect.\";\n  } else {\n    userFiendlyErrorMessage = error.message;\n  }\n\n  return userFiendlyErrorMessage;\n}\n\nasync function rubrikApiPost(url, httpHeaders, body) {\n  /*\n   * This function will make an HTTP Post using the supplied endpoint and\n   * httpHeaders.\n   */\n  console.log(\"rubrikApiPost\");\n  console.log(httpHeaders);\n  console.log(body);\n\n  const instance = axios.create({\n    timeout: 15000,\n    httpsAgent: new https.Agent({\n      rejectUnauthorized: false,\n    }),\n  });\n  const response = await instance({\n    method: \"post\",\n    url: url,\n    headers: httpHeaders,\n    data: body,\n  });\n\n  return response;\n}\n\nexport async function validateCredentials(\n  platform,\n  nodeIp,\n  username,\n  password,\n  polarisDomain\n) {\n  /*\n   * This function makes an API request to CDM to validate the supplied\n   * credentials. Since we use Basic authentication to make GQL calls to CDM,\n   * which prevent token timeouts issues, we don't actually use the returned\n   * API Token.\n   */\n  let httpHeader = defaultHttpHeader;\n  var endpoint;\n  var postBody;\n  if (platform === \"cdm\") {\n    httpHeader.Authorization = \"Basic \" + btoa(username + \":\" + password);\n    endpoint = \"/api/v1/session\";\n    postBody = {};\n  } else {\n    httpHeader.Accept = \"application/json, text/plain\";\n    httpHeader[\"Content-Type\"] = \"application/json;charset=UTF-8\";\n    endpoint = `${polarisDomain}/api/session`;\n    postBody = {\n      username: username,\n      password: password,\n    };\n  }\n\n  console.log(httpHeader);\n\n  const formattedNodeIp = formatIp(nodeIp);\n  console.log(formattedNodeIp);\n  console.log(endpoint);\n\n  let url = `https://${formattedNodeIp}${endpoint}`;\n  console.log(url);\n\n  var response = await rubrikApiPost(url, httpHeader, postBody);\n\n  if (platform === \"cdm\") {\n    return response.data.token;\n  } else {\n    return response.data.access_token;\n  }\n}\n\nexport function graphQLFetcher(\n  graphQLParams,\n  platform,\n  nodeIp,\n  username,\n  password,\n  apiToken,\n  polarisDomain\n) {\n  /*\n   * This function is used by GraphiQl to make the GraphQL API calls.\n   */\n  const formattedNodeIp = formatIp(nodeIp);\n  let httpHeader = defaultHttpHeader;\n  let endpointPrefix = `https://${formattedNodeIp}`;\n  let endpointSuffixPolaris = `${polarisDomain}/api/graphql`;\n  let endpointSuffixCdm = \"/api/internal/graphql\";\n\n  var endpoint;\n  if (platform === \"polaris\") {\n    httpHeader.Authorization = `Bearer ${apiToken}`;\n    endpoint = endpointPrefix + endpointSuffixPolaris;\n  } else {\n    httpHeader.Authorization = \"Basic \" + btoa(username + \":\" + password);\n    endpoint = endpointPrefix + endpointSuffixCdm;\n  }\n\n  // TODO: Update to use rubrikApiPost\n  const url = new URL(endpoint);\n\n  const requestOptions = {\n    method: \"post\",\n    protocol: url.protocol,\n    hostname: url.hostname,\n    port: url.port,\n    path: url.pathname + url.search,\n    headers: httpHeader,\n    rejectUnauthorized: false, // avoid problems with self-signed certs\n  };\n\n  const request = httpsRequest(requestOptions);\n\n  return new Promise((resolve, reject) => {\n    request.on(\"response\", (response) => {\n      const chunks = [];\n      response.on(\"data\", (data) => {\n        chunks.push(Buffer.from(data));\n      });\n      response.on(\"end\", (end) => {\n        const data = Buffer.concat(chunks).toString();\n        if (response.statusCode >= 400) {\n          reject(data);\n        } else {\n          resolve(JSON.parse(data));\n        }\n      });\n    });\n\n    request.on(\"error\", reject);\n\n    request.end(JSON.stringify(graphQLParams));\n  });\n}\n","import React, { Component } from \"react\";\n// App Component related imports\nimport \"./LandingPage.css\";\nimport rubrikLogo from \"../images/rubrikLogo.svg\";\nimport LoginForm from \"./LoginForm\";\nimport { validateCredentials, userFiendlyErrorMessage } from \"../utils/api\";\n// Material-UI related imports\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst selectYourPlatformFormHeader = \"Select your Platform\";\nconst loginButtonText = \"Login\";\nconst connectingToPlatformButtonText = \"Attempting to Connect\";\nconst polarisUserDomain = \".my.rubrik.com\";\nconst polarisDevDomain = \".dev.my.rubrik-lab.com\";\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formHeader: selectYourPlatformFormHeader,\n      platform: null,\n      loginButtonText: loginButtonText,\n      loginErrorMessage: null,\n      apiToken: null,\n      ip: null,\n      username: null,\n      password: null,\n      polarisDomain: polarisUserDomain,\n    };\n\n    this.createLoginForm = this.createLoginForm.bind(this);\n    this.handleSwitchToLogin = this.handleSwitchToLogin.bind(this);\n    this.handleSelectYourPlatform = this.handleSelectYourPlatform.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleLoginButton = this.handleLoginButton.bind(this);\n    this.createLoginHeader = this.createLoginHeader.bind(this);\n    this.createDevModeIcon = this.createDevModeIcon.bind(this);\n    this.handleModeButton = this.handleModeButton.bind(this);\n  }\n\n  handleSwitchToLogin(event) {\n    event.preventDefault();\n\n    this.setState({\n      platform: event.target.textContent.toLowerCase(),\n      formHeader: loginButtonText,\n    });\n  }\n\n  async handleLoginButton(event) {\n    this.setState({\n      loginButtonText: connectingToPlatformButtonText,\n      loginErrorMessage: null,\n    });\n\n    try {\n      let apiToken = await validateCredentials(\n        this.state.platform,\n        this.state.ip,\n        this.state.username,\n        this.state.password,\n        this.state.polarisDomain\n      );\n\n      this.setState({\n        apiToken: apiToken,\n        loginButtonText: \"Login\",\n      });\n\n      this.props.credentialUpdate(\n        this.state.platform,\n        this.state.ip,\n        this.state.username,\n        this.state.password,\n        this.state.apiToken,\n        this.state.polarisDomain\n      );\n    } catch (error) {\n      this.setState({\n        loginErrorMessage: userFiendlyErrorMessage(error),\n        loginButtonText: loginButtonText,\n      });\n    }\n  }\n\n  handleSelectYourPlatform(event, platform) {\n    this.setState({\n      platform: this.state.platform === \"polaris\" ? \"cdm\" : \"polaris\",\n      loginErrorMessage: null,\n    });\n  }\n\n  handleModeButton() {\n    this.setState({\n      polarisDomain:\n        this.state.polarisDomain === polarisUserDomain\n          ? polarisDevDomain\n          : polarisUserDomain,\n    });\n  }\n\n  onChange(event) {\n    // This function handles the input from the form fields and sets the\n    // appropriate state.\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  createFullLandingPageUi() {\n    return (\n      <React.Fragment>\n        <div className=\"landing-page\">\n          {this.createWelcome()}\n\n          {this.createLogin()}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  // Creates the \"Welcome to the Rubrik GraphQL Playground\" UI\n  createWelcome() {\n    return (\n      <div className=\"welcome-message\">\n        <div></div>\n        <div className=\"center-white-text\">\n          <div className=\"larger-font-size\">\n            <span>Welcome to the </span>\n            <span className=\"bold-text\">\n              <span>Rubrik GraphQL Playground</span>\n            </span>\n          </div>\n        </div>\n        <div className=\"bottom-white-small-text\">\n          <span className=\"thin-text\">\n            <span>Don't Backup. </span>\n          </span>\n          <span>Go Forward.</span>\n        </div>\n      </div>\n    );\n  }\n\n  // Creates the right side of the Welcome screen where the login form lives\n  createLogin() {\n    return (\n      <div className=\"login\">\n        <div className=\"flex-container\">\n          <div className=\"flex-row\">\n            {this.createLoginLogo()}\n            {this.createLoginHeader()}\n            {this.state.platform === null && this.createLoginPlatformButtons()}\n            {this.state.platform != null && this.createLoginForm()}\n            {this.createRwpLink()}\n            {this.createDevModeIcon()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  createLoginLogo() {\n    return (\n      <div className=\"display-flex-justify\">\n        <img alt=\"Rubrik logo\" src={rubrikLogo} width=\"80\" />\n      </div>\n    );\n  }\n\n  createLoginHeader() {\n    return (\n      <React.Fragment>\n        <div className=\"login-text display-flex-justify\">\n          {this.state.formHeader}\n        </div>\n        {this.state.platform != null && this.createLoginErrorMessage()}\n      </React.Fragment>\n    );\n  }\n\n  createLoginErrorMessage() {\n    return (\n      <div className=\"error-text display-flex-justify\">\n        {this.state.loginErrorMessage}\n      </div>\n    );\n  }\n\n  createLoginPlatformButtons() {\n    return (\n      <div className=\"btn-row {this.state.platform}\">\n        <div className=\"btn-column\">\n          <button\n            type=\"submit\"\n            className=\"primary-button\"\n            onClick={this.handleSwitchToLogin}\n          >\n            <h3>Polaris</h3>\n          </button>\n        </div>\n        <div className=\"btn-column\">\n          <button\n            type=\"submit\"\n            className=\"primary-button\"\n            onClick={this.handleSwitchToLogin}\n          >\n            <h3>CDM</h3>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  createRwpLink() {\n    // TODO: If you try to download the link when you don't have internet access the app goes blank\n    // Until error handling is in place for this, we are are just going to return null\n    // return (\n    //   <div className=\"display-flex-justify\">\n    //     <a href=\"https://www.rubrik.com/content/dam/rubrik/en/resources/white-paper/an-introduction-to-graphql-and-rubrik.pdf\">\n    //       An Introduction to GraphQL and Rubrik Whitepaper\n    //     </a>\n    //   </div>\n    // );\n    return;\n  }\n\n  createDevModeIcon() {\n    const HtmlTooltip = withStyles((theme) => ({\n      tooltip: {\n        backgroundColor: \"rgb(255, 255, 255)\",\n        color: \"rgba(0, 0, 0, 0.87)\",\n        maxWidth: 220,\n        \"text-align\": \"center\",\n      },\n    }))(Tooltip);\n\n    if (this.state.platform === \"polaris\") {\n      return (\n        <div className=\"bottom-right\">\n          <HtmlTooltip\n            title={\n              <React.Fragment>\n                <Typography color=\"inherit\" variant=\"body2\">\n                  {this.state.polarisDomain === polarisUserDomain\n                    ? \"Set the Polaris Domain to development. Internal Rubrik use only.\"\n                    : \"Set the Polaris Domain to production.\"}\n                </Typography>\n              </React.Fragment>\n            }\n          >\n            <IconButton aria-label=\"delete\" onClick={this.handleModeButton}>\n              {this.state.polarisDomain === polarisUserDomain ? (\n                <PersonIcon />\n              ) : (\n                <CodeIcon />\n              )}\n            </IconButton>\n          </HtmlTooltip>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  createLoginForm() {\n    return (\n      <LoginForm\n        platform={this.state.platform}\n        ip={this.state.ip}\n        username={this.state.username}\n        password={this.state.password}\n        selectYourPlatform={this.handleSelectYourPlatform}\n        onChange={this.onChange}\n        loginButton={this.handleLoginButton}\n        loginButtonText={this.state.loginButtonText}\n        polarisDomain={this.state.polarisDomain}\n      />\n    );\n  }\n\n  render() {\n    return this.createFullLandingPageUi();\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport GraphiQL from \"graphiql\";\nimport \"graphiql/graphiql.css\";\nimport { graphQLFetcher } from \"../utils/api\";\nimport rubrikLogo from \"../images/rubrikLogo.svg\";\n\nclass GraphiQl extends Component {\n  test() {\n    console.log(\"test\");\n  }\n  render() {\n    return (\n      <GraphiQL\n        fetcher={(graphQLParams) =>\n          graphQLFetcher(\n            graphQLParams,\n            this.props.platform,\n            this.props.nodeIp,\n            this.props.username,\n            this.props.password,\n            this.props.apiToken,\n            this.props.polarisDomain\n          )\n        }\n      >\n        <GraphiQL.Logo>\n          <img src={rubrikLogo} width=\"40\" align=\"middle\" alt=\"Rubrik logo\" />\n        </GraphiQL.Logo>\n      </GraphiQL>\n    );\n  }\n}\n\nexport default GraphiQl;\n","import React, { Component } from \"react\";\nimport LandingPage from \"./components/LandingPage\";\nimport GraphiQl from \"./components/GraphiQl\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      platform: null,\n      nodeIp: null,\n      username: null,\n      password: null,\n      apiToken: null,\n      polarisDomain: null,\n    };\n\n    this.handleCredentialUpdate = this.handleCredentialUpdate.bind(this);\n  }\n\n  handleCredentialUpdate(\n    platform,\n    nodeIp,\n    username,\n    password,\n    apiToken,\n    polarisDomain\n  ) {\n    this.setState({\n      platform,\n      nodeIp,\n      username,\n      password,\n      apiToken,\n      polarisDomain,\n    });\n  }\n\n  render() {\n    if (this.state.apiToken == null) {\n      return (\n        <LandingPage\n          credentialUpdate={(\n            platform,\n            nodeIp,\n            username,\n            password,\n            apiToken,\n            polarisDomain\n          ) =>\n            this.handleCredentialUpdate(\n              platform,\n              nodeIp,\n              username,\n              password,\n              apiToken,\n              polarisDomain\n            )\n          }\n        />\n      );\n    } else {\n      return (\n        <GraphiQl\n          platform={this.state.platform}\n          nodeIp={this.state.nodeIp}\n          username={this.state.username}\n          password={this.state.password}\n          apiToken={this.state.apiToken}\n          polarisDomain={this.state.polarisDomain}\n        />\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = require(\"assert\");"],"sourceRoot":""}